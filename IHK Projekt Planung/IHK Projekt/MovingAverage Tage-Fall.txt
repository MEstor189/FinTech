ğŸ“„ Dokumentation: Erkenntnisse zur Moving-Average-Strategie
âœ… 1. Berechnung des Moving Averages (MA)
Die gleitenden Durchschnitte (Moving Averages) werden ausschlieÃŸlich auf Basis von echten Handelstagen berechnet.
Wochenenden und Feiertage werden bewusst Ã¼bersprungen, um eine Verzerrung der Durchschnittswerte zu vermeiden.
Die Methode greift dabei auf bereits gefilterte historische Daten (StockData) zu, in denen keine nicht-handelsrelevanten Tage enthalten sind.

âœ… 2. Strategielogik: Entry-Signal
Ein Einstiegssignal wird ausgelÃ¶st, wenn:

am Vortag: shortMA â‰¤ longMA

heute: shortMA > longMA

â†’ Das entspricht einem klassischen Crossover von unten nach oben.

âœ… 3. Verbesserung der MA-Berechnung
Anfangs wurde minusDays(i) verwendet, um zurÃ¼ckliegende Tage zu analysieren.
Diese Methode konnte an Wochenenden oder fehlenden Tagen zu null-Ergebnissen fÃ¼hren.
Die neue Berechnung nutzt nun alle vorhandenen Daten vor dem Zieltag, rÃ¼ckwÃ¤rts sortiert und begrenzt auf n Tage.

âœ… 4. Warum es Unterschiede zur frÃ¼heren Simulation gab
Eine frÃ¼here Testsimulation hatte leichte Abweichungen beim Entry-Verhalten, da sie Pandas' rolling()-Logik verwendete,
welche rein reihenbasiert arbeitet und nicht zwischen Handelstagen und LÃ¼cken unterscheidet.
In deiner Engine fÃ¼hrten prÃ¤zise, datumsgesteuerte Berechnungen zu einem korrekten Einstieg am 27.09.2024,
den die Python-Simulation zunÃ¤chst nicht erkannte.

âœ… 5. Debug-Logging als Validierungswerkzeug
Durch gezieltes Logging der MA-Werte (short, long, jeweils gestern und heute) konnte jedes Signal nachvollziehbar validiert werden.
So wurde u.â€¯a. bestÃ¤tigt, dass alle Einstiegssignale regelkonform ausgelÃ¶st wurden â€“ inklusive Edge-FÃ¤llen wie am 27.09.2024.